name: Sync with SVN
on:
  push:
    branches:
      - master
  release:
    types:
      - created
  workflow_dispatch:
jobs:
  svn_sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Sync with SVN
        run: |
          RELEASE_VERSION=`grep "^Stable tag:" readme.txt | awk -F' ' '{print $NF}'`
          VERSION=`grep "Version:" image-cdn.php | awk -F' ' '{print $NF}'`
          echo "release_version: $RELEASE_VERSION"
          echo "version: $VERSION"
          
          echo "mkdir ~/tmp"
          mkdir ~/tmp
          
          echo "cd ~/tmp"
          cd ~/tmp
          
          echo "svn co ${{ vars.SVN_REP_URL }} --no-auth-cache --non-interactive --username \"${{ vars.SVN_REP_USER }}\" --password \"***\""
          svn co ${{ vars.SVN_REP_URL }} --no-auth-cache --non-interactive --username "${{ vars.SVN_REP_USER }}" --password "${{ secrets.SVN_REP_PW }}"
          
          echo "cd ${{ vars.SVN_REP_DIR }}"
          cd ${{ vars.SVN_REP_DIR }}
          
          echo "check if version $VERSION already published and bail out if so"
          if [[ -d "tags/$VERSION" ]]; then
            echo "ℹ︎ Version $VERSION was already published";
            exit
          fi
          
          echo "svn delete trunk/*"
          svn delete trunk/*
          
          echo "mkdir -p dist_image_cdn"
          mkdir -p dist_image_cdn
          
          echo "cp -v -r ${{ github.workspace }}/*.php ${{ github.workspace }}/*.txt ${{ github.workspace }}/imageengine ${{ github.workspace }}/assets ${{ github.workspace }}/templates dist_image_cdn/"
          cp -v -r ${{ github.workspace }}/*.php ${{ github.workspace }}/*.txt ${{ github.workspace }}/imageengine ${{ github.workspace }}/assets ${{ github.workspace }}/templates dist_image_cdn/
          
          echo "rsync -r --exclude='.git' --exclude='.github' dist_image_cdn/ trunk/"
          rsync -r --exclude='.git' --exclude='.github' dist_image_cdn/ trunk/
          
          echo "svn add trunk/*"
          svn add trunk/*
          
          echo "svn commit --no-auth-cache --non-interactive --username \"${{ vars.SVN_REP_USER }}\" --password \"***\" -m \"Update to version $VERSION from GitHub\" ."
          svn commit --no-auth-cache --non-interactive --username "${{ vars.SVN_REP_USER }}" --password "${{ secrets.SVN_REP_PW }}" -m "Update to version $VERSION from GitHub" .
          
          echo "svn copy --no-auth-cache --non-interactive --username \"${{ vars.SVN_REP_USER }}\" --password \"***\" ${{ vars.SVN_REP_URL }}/trunk ${{ vars.SVN_REP_URL }}/tags/$VERSION -m "release $VERSION""
          svn copy --no-auth-cache --non-interactive --username "${{ vars.SVN_REP_USER }}" --password "${{ secrets.SVN_REP_PW }}" ${{ vars.SVN_REP_URL }}/trunk ${{ vars.SVN_REP_URL }}/tags/$VERSION -m "release $VERSION"
  

